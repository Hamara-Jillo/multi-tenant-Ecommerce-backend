# Generated by Django 3.2 on 2025-05-16 21:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('merchant', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, default='My Store', error_messages={'blank': 'Store name cannot be blank.', 'null': 'Store name cannot be null.', 'unique': 'A store with this name already exists.'}, help_text='Official name of the store', max_length=255, unique=True, verbose_name='Store Name')),
                ('slug', models.SlugField(help_text='URL-friendly identifier', max_length=255, unique=True, verbose_name='Store Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active Status')),
                ('auto_create_admin', models.BooleanField(default=True, help_text='Automatically create admin user for this store')),
            ],
            options={
                'verbose_name': 'Store',
                'verbose_name_plural': 'Stores',
                'db_table': 'store_meta_store',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StorePermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('access_level', models.CharField(choices=[('read', 'Read Only'), ('write', 'Read/Write'), ('admin', 'Full Admin')], default='read', max_length=20)),
                ('merchant', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='merchant.merchant', verbose_name='Merchant')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store_meta.store', verbose_name='Store')),
            ],
            options={
                'verbose_name': 'Store Access Permission',
                'verbose_name_plural': 'Store Access Permissions',
                'db_table': 'store_meta_storepermission',
                'unique_together': {('merchant', 'store')},
            },
        ),
    ]
